(undo-tree-save-format-version . 1)
"38d11289089d115640a4a01c4a73331d6113ef39"
[nil nil nil nil (25991 4528 501423 82000) 0 nil]
([nil nil ((#("  :PROPERTIES:
  :CUSTOM_ID: ibtracs-valid-training-dates
  :END:
" 0 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 14 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t face org-drawer fontified t) 14 15 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 15 17 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 17 28 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face org-special-keyword fontified t) 28 29 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 29 57 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face org-property-value fontified t) 57 58 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 58 60 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 60 65 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) font-lock-fontified t face org-drawer fontified t) 65 66 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 32) (undo-tree-id7 . 66) (undo-tree-id8 . -65) (t 25991 4433 105095 237000)) nil (25991 4528 501421 582000) 0 nil])
([nil nil ((538 . 739) (#("- The geostationary view of the imager has a limited extent, so some
  IBTrACS data points may not be visible to the imager.

  - We can use the projection data of the GOES image filter out the
    latitudes and longitudes of the IBTrACS data." 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face (org-list-dt) composition (1 1 [8226]) fontified t) 1 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face (org-indent) fontified t) 2 69 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 69 125 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 125 126 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 126 128 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face (org-indent) fontified t) 128 129 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face (org-list-dt) composition (1 1 [8226]) fontified t) 129 130 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face (org-indent) fontified t) 130 194 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 194 243 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 538) (783 . 1026) (#("- GOES16 was launched in November 2016, so we'll only be able to use a
  subset of the IBTrACS data.

  - We just need to make sure we exclude any IBTrACS data outside of the
    GOES16 imaging window." 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face (org-list-dt) composition (1 1 [8226]) fontified t) 1 2 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face (org-indent) fontified t) 2 71 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 71 101 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 101 102 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 102 104 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face (org-indent) fontified t) 104 105 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face (org-list-dt) composition (1 1 [8226]) fontified t) 105 106 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face (org-indent) fontified t) 106 175 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 175 201 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 783) 782) nil (25991 4528 501418 182000) 0 nil])
([nil nil ((538 . 781) (#("- GOES16 was launched in November 2016, so we'll only be able to use a
  subset of the IBTrACS data.

  - We just need to make sure we exclude any IBTrACS data outside of the
    GOES16 imaging window." 0 1 (face (org-list-dt) composition (1 1 [8226]) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (face (org-indent) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 71 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 71 101 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 101 102 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 102 104 (face (org-indent) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 104 105 (face (org-list-dt) composition (1 1 [8226]) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 105 106 (face (org-indent) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 106 175 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 175 201 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 538) (741 . 942) (#("- The geostationary view of the imager has a limited extent, so some
  IBTrACS data points may not be visible to the imager.

  - We can use the projection data of the GOES image filter out the
    latitudes and longitudes of the IBTrACS data." 0 1 (face (org-list-dt) composition (1 1 [8226]) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (face (org-indent) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 69 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 69 125 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 125 126 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 126 128 (face (org-indent) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 128 129 (face (org-list-dt) composition (1 1 [8226]) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 129 130 (face (org-indent) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 130 194 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 194 243 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 741) 985) nil (25991 4528 501415 582000) 0 nil])
([nil nil ((#("   :PROPERTIES:
   :CUSTOM_ID: import-modules
   :END:
" 0 3 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 15 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 15 16 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 16 19 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 19 30 (face org-special-keyword wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 30 31 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 31 45 (face org-property-value wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 45 46 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 46 49 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 49 54 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 54 55 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2007) (undo-tree-id6 . -54)) nil (25991 4528 501413 782000) 0 nil])
([nil nil ((#("   :PROPERTIES:
   :CUSTOM_ID: read-ibtracs-data
   :END:
" 0 3 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 15 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 15 16 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 16 19 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 19 30 (face org-special-keyword wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 30 31 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 31 48 (face org-property-value wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 48 49 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 49 52 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 52 57 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 57 58 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2441) (undo-tree-id5 . -57)) nil (25991 4528 501412 482000) 0 nil])
([nil nil ((#("   :PROPERTIES:
   :CUSTOM_ID: read-goes16-image
   :END:
" 0 3 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 15 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 15 16 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 16 19 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 19 30 (face org-special-keyword wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 30 31 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 31 48 (face org-property-value wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 48 49 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 49 52 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 52 57 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 57 58 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 2795) (undo-tree-id4 . -57)) nil (25991 4528 501410 882000) 0 nil])
([nil nil ((#("   :PROPERTIES:
   :CUSTOM_ID: handle-projections
   :END:
" 0 3 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 6 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 6 15 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 15 16 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 16 19 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 19 30 (face org-special-keyword wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 30 31 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 31 49 (face org-property-value wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 49 50 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 50 53 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 53 58 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 58 59 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3385) (undo-tree-id3 . -58)) nil (25991 4528 501409 482000) 0 nil])
([nil nil ((#("   :PROPERTIES:
   :CUSTOM_ID: filter-out-with-bounding-box
   :END:
" 0 3 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 15 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 15 16 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 16 19 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 19 30 (face org-special-keyword wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 30 31 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 31 59 (face org-property-value wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 59 60 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 60 63 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 63 68 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 68 69 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4319) (undo-tree-id2 . -68)) nil (25991 4528 501408 82000) 0 nil])
([nil nil ((#("   :PROPERTIES:
   :CUSTOM_ID: drop-additional-off-disc-samples
   :END:
" 0 3 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 15 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 15 16 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 16 19 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 19 30 (face org-special-keyword wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 30 31 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 31 63 (face org-property-value wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 63 64 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 64 67 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 67 72 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 72 73 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5290) (undo-tree-id1 . -72)) nil (25991 4528 501406 282000) 0 nil])
([nil nil ((#("   :PROPERTIES:
   :CUSTOM_ID: save-the-output
   :END:
" 0 3 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 3 15 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 15 16 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 16 19 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 19 30 (face org-special-keyword wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 30 31 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 31 46 (face org-property-value wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 46 47 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 47 50 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 50 55 (font-lock-fontified t face org-drawer wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t) 55 56 (wrap-prefix #("       " 0 4 (face org-indent) 4 7 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6934) (undo-tree-id0 . -55)) nil (25991 4528 501402 882000) 0 nil])
([nil nil ((1 . 3)) nil (25991 4528 501380 682000) 0 nil])
([nil nil ((nil rear-nonsticky nil 302 . 303) (nil fontified nil 302 . 303) (nil fontified nil 287 . 302) (nil fontified nil 286 . 287) (nil fontified nil 241 . 286) (nil fontified nil 158 . 241) (nil fontified nil 136 . 158) (nil fontified nil 70 . 136) (nil fontified nil 45 . 70) (nil fontified nil 1 . 45) (1 . 303) (t 25991 4528 495095 183000)) nil (25991 5615 22213 143000) 0 nil])
([nil nil ((#("C" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10) (t 25991 4595 15094 537000)) nil (25991 6036 48289 311000) 0 nil] [nil nil ((#("#+title: Cropping GOES Imagery from IBTrACS
" 0 8 (wrap-prefix "" line-prefix "" face org-document-info-keyword font-lock-fontified t fontified t) 8 9 (wrap-prefix "" line-prefix "" fontified t) 9 44 (wrap-prefix "" line-prefix "" face org-document-title font-lock-fontified t fontified t)) . 1) (undo-tree-id60 . -5) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -5) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . -5) (undo-tree-id68 . -6) (undo-tree-id69 . -6) (undo-tree-id70 . -6) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -7) (undo-tree-id77 . -7) (undo-tree-id78 . -7) (undo-tree-id79 . -7) (undo-tree-id80 . -7) (undo-tree-id81 . -7) (undo-tree-id82 . -7) (undo-tree-id83 . -7) (undo-tree-id84 . -8) (undo-tree-id85 . -8) (undo-tree-id86 . -8) (undo-tree-id87 . -8) (undo-tree-id88 . -8) (undo-tree-id89 . -8) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -9) (undo-tree-id93 . -9) (undo-tree-id94 . -9) (undo-tree-id95 . -9) (undo-tree-id96 . -9) (undo-tree-id97 . -9) (undo-tree-id98 . -9) (undo-tree-id99 . -9) (undo-tree-id100 . -9) (undo-tree-id101 . -9) (undo-tree-id102 . -9) (undo-tree-id103 . -9) (undo-tree-id104 . -9) (undo-tree-id105 . -9) (undo-tree-id106 . -9) (undo-tree-id107 . -9) (undo-tree-id108 . -9) (undo-tree-id109 . -9) (undo-tree-id110 . -9) (undo-tree-id111 . -9) (undo-tree-id112 . -9) (undo-tree-id113 . -9) (undo-tree-id114 . -9) (undo-tree-id115 . -9) (undo-tree-id116 . -9) (undo-tree-id117 . -9) (undo-tree-id118 . -9) (undo-tree-id119 . -9) (undo-tree-id120 . -9) (undo-tree-id121 . -9) (undo-tree-id122 . -9) (undo-tree-id123 . -9) (undo-tree-id124 . -9) (undo-tree-id125 . -44) (undo-tree-id126 . -44) (undo-tree-id127 . -43) 10 (t 25991 4595 15094 537000)) ((1 . 45)) (25991 5614 517467 756000) 0 nil] [nil nil ((#("3" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -303) (undo-tree-id12 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -304) (undo-tree-id13 . -1) (#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -305) (undo-tree-id14 . -1) 306 (303 . 306)) ((#("3dd" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 303) (undo-tree-id15 . -3) (303 . 306)) (25991 4589 99269 102000) 0 nil])
([nil nil ((#("r" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48288 511000) 0 nil])
([nil nil ((#("#+date: <2023-11-15 Wed>
" 0 7 (face org-document-info-keyword wrap-prefix "" line-prefix "" font-lock-fontified t fontified t) 7 8 (wrap-prefix "" line-prefix "" fontified t) 8 23 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-date org-document-info) wrap-prefix "" line-prefix "" font-lock-fontified t fontified t) 23 24 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-date org-document-info) wrap-prefix "" line-prefix "" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-fontified t fontified t) 24 25 (face org-document-info wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 1) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -5) (undo-tree-id20 . -5) (undo-tree-id21 . -5) (undo-tree-id22 . -5) (undo-tree-id23 . -5) (undo-tree-id24 . -5) (undo-tree-id25 . -5) (undo-tree-id26 . -5) (undo-tree-id27 . -6) (undo-tree-id28 . -6) (undo-tree-id29 . -6) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (undo-tree-id35 . -7) (undo-tree-id36 . -7) (undo-tree-id37 . -7) (undo-tree-id38 . -7) (undo-tree-id39 . -7) (undo-tree-id40 . -7) (undo-tree-id41 . -7) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) (undo-tree-id46 . -7) (undo-tree-id47 . -7) (undo-tree-id48 . -7) (undo-tree-id49 . -7) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -24) (undo-tree-id58 . -25) (undo-tree-id59 . -25)) ((1 . 26)) (25991 5614 516488 655000) 0 nil])
([nil nil ((#("

* IBTrACS Valid Training Dates
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 3 (face org-level-1 keymap (keymap) composition (0 1 [9673]) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 3 4 (face org-level-1 keymap (keymap) wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 4 32 (face org-level-1 wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t) 32 33 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 303) (undo-tree-id10 . 33) (undo-tree-id11 . -32)) ((303 . 336)) (25991 4588 853984 500000) 0 nil])
([nil nil ((#("o" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48287 911000) 0 nil])
nil
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 303) (undo-tree-id9 . 1)) ((303 . 304)) (25991 4588 852985 100000) 0 nil])
([nil nil ((#("p" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48287 211000) 0 nil])
nil
([nil nil ((#("p" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48286 611000) 0 nil])
([nil nil ((#("i" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48285 911000) 0 nil])
([nil nil ((#("n" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48285 411000) 0 nil])
([nil nil ((#("g" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48284 711000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48284 11000) 0 nil])
([nil nil ((#("G" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48283 411000) 0 nil])
([nil nil ((#("O" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified nil)) . 10)) nil (25991 6036 48282 711000) 0 nil])
([nil nil ((#("E" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48282 11000) 0 nil])
([nil nil ((#("S" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48280 811000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48280 211000) 0 nil])
([nil nil ((#("I" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48279 111000) 0 nil])
([nil nil ((#("m" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48278 411000) 0 nil])
([nil nil ((#("a" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified nil)) . 10)) nil (25991 6036 48277 711000) 0 nil])
([nil nil ((#("g" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified nil)) . 10)) nil (25991 6036 48276 911000) 0 nil])
([nil nil ((#("e" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48276 311000) 0 nil])
([nil nil ((#("r" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48275 511000) 0 nil])
([nil nil ((#("y" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified nil)) . 10)) nil (25991 6036 48274 911000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48274 211000) 0 nil])
([nil nil ((#("f" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48273 211000) 0 nil])
([nil nil ((#("r" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48272 511000) 0 nil])
([nil nil ((#("o" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48271 811000) 0 nil])
([nil nil ((#("m" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48271 111000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48270 511000) 0 nil])
([nil nil ((#("I" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48269 811000) 0 nil])
([nil nil ((#("B" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48268 911000) 0 nil])
([nil nil ((#("T" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48268 111000) 0 nil])
([nil nil ((#("r" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48267 311000) 0 nil])
([nil nil ((#("A" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48266 611000) 0 nil])
([nil nil ((#("C" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10)) nil (25991 6036 48265 811000) 0 nil])
([nil nil ((#("S" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 10) (undo-tree-id270 . -1) (undo-tree-id271 . -1)) nil (25991 6036 48264 811000) 0 nil])
([nil nil ((179 . 195) (#(" " 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -179) (undo-tree-id215 . -1) (#("o" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -180) (undo-tree-id216 . -1) (#("n" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -181) (undo-tree-id217 . -1) 182 (181 . 182) (#("d" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -181) (undo-tree-id218 . -1) (#("n" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -182) (undo-tree-id219 . -1) 183 (182 . 183) (161 . 182) (#("I" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -161) (undo-tree-id220 . -1) (#("B" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -162) (undo-tree-id221 . -1) (#("T" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -163) (undo-tree-id222 . -1) 164 (159 . 164) (148 . 159) (#("d" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -148) (undo-tree-id223 . -1) 149 (133 . 149) (#("." 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("t" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("d" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#(" " 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("S" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("C" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("A" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("r" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("T" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("B" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("I" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#(" " 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("g" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("n" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("i" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("s" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("u" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#(" " 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("y" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified nil)) . 133) (#("r" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified nil)) . 133) (#("e" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("g" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("m" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("i" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#(" " 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("S" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("E" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("O" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("G" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#(" " 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("m" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("o" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("r" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("f" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#(" " 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("y" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified nil)) . 133) (#("r" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("e" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("g" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("m" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("i" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#(" " 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("e" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("n" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("o" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("l" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("c" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("y" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("c" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#(" " 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("l" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified nil)) . 133) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified nil)) . 133) (#("c" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("i" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("p" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("o" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("r" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("t" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#(" " 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("g" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("n" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("i" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("p" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("p" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("o" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("r" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . 133) (#("C" 0 1 (wrap-prefix "" line-prefix "" face org-meta-line font-lock-fontified t fontified t)) . 133) (85 . 98) (#("d" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -85) (undo-tree-id224 . -1) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -86) (undo-tree-id225 . -1) 87 (#("t" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -87) (undo-tree-id226 . -1) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -88) (undo-tree-id227 . -1) (#("-" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -89) (undo-tree-id228 . -1) (#("v" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -90) (undo-tree-id229 . -1) (#("i" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -91) (undo-tree-id230 . -1) (#("s" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -92) (undo-tree-id231 . -1) (#("u" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -93) (undo-tree-id232 . -1) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -94) (undo-tree-id233 . -1) (#("l" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -95) (undo-tree-id234 . -1) (#("i" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -96) (undo-tree-id235 . -1) (#("z" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -97) (undo-tree-id236 . -1) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -98) (undo-tree-id237 . -1) (#("t" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified nil)) . -99) (undo-tree-id238 . -1) (#("i" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -100) (undo-tree-id239 . -1) (#("o" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -101) (undo-tree-id240 . -1) (#("n" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -102) (undo-tree-id241 . -1) (#(":" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -103) (undo-tree-id242 . -1) (#("e" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -104) (undo-tree-id243 . -1) (#("x" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -105) (undo-tree-id244 . -1) (#("p" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -106) (undo-tree-id245 . -1) (#("l" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -107) (undo-tree-id246 . -1) 108 (#("o" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -108) (undo-tree-id247 . -1) (#("r" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -109) (undo-tree-id248 . -1) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -110) (undo-tree-id249 . -1) (#("t" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -111) (undo-tree-id250 . -1) (#("o" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -112) (undo-tree-id251 . -1) (#("r" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -113) (undo-tree-id252 . -1) (#("y" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -114) (undo-tree-id253 . -1) (#("-" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -115) (undo-tree-id254 . -1) (#("d" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified nil)) . -116) (undo-tree-id255 . -1) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -117) (undo-tree-id256 . -1) (#("t" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -118) (undo-tree-id257 . -1) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -119) (undo-tree-id258 . -1) (#("-" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -120) (undo-tree-id259 . -1) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -121) (undo-tree-id260 . -1) (#("n" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -122) (undo-tree-id261 . -1) (#("a" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -123) (undo-tree-id262 . -1) (#("l" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -124) (undo-tree-id263 . -1) (#("y" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -125) (undo-tree-id264 . -1) (#("s" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -126) (undo-tree-id265 . -1) (#("i" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -127) (undo-tree-id266 . -1) (#("s" 0 1 (face org-meta-line wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -128) (undo-tree-id267 . -1) 129 (48 . 64) (#("<2023-11-15 Wed>" 0 15 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-date org-document-info) wrap-prefix "" line-prefix "" font-lock-fontified t fontified t) 15 16 (keymap (keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) mouse-face highlight face (org-date org-document-info) wrap-prefix "" line-prefix "" rear-nonsticky (mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) font-lock-fontified t fontified t)) . 48) (64 . 64) (36 . 38) (#("a" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -36) (undo-tree-id268 . -1) (#("s" 0 1 (face org-document-title wrap-prefix "" line-prefix "" font-lock-fontified t fontified t)) . -37) (undo-tree-id269 . -1) 38 (34 . 38) (13 . 34) (9 . 13)) nil (25991 6036 48143 511000) 0 nil])
([nil nil ((#("


* IBTrACS Valid Training Dates
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 1 2 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 2 3 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t) 3 4 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" face org-level-1 keymap (keymap) composition (0 1 [9673]) fontified t) 4 5 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" face org-level-1 keymap (keymap) fontified t) 5 33 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" face org-level-1 fontified t) 33 34 (wrap-prefix #("* " 0 2 (face org-indent)) line-prefix "" fontified t)) . 257) (undo-tree-id183 . -33) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . 34) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -3) (undo-tree-id209 . -3) (undo-tree-id210 . -3) (undo-tree-id211 . -3) (undo-tree-id212 . -3) (undo-tree-id213 . -34) (undo-tree-id214 . -34)) nil (25991 6036 48078 11000) 0 nil])
([nil nil ((#("d" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -328) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 329 (328 . 329)) nil (25991 6036 48053 311000) 0 nil])
([nil nil ((#("S" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 327) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1)) nil (25991 6036 48043 411000) 0 nil])
([nil nil ((327 . 328)) nil (25991 6036 48022 511000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 328) (undo-tree-id146 . 1)) nil (25991 6036 48021 511000) 0 nil])
([nil nil ((328 . 329)) nil (25991 6036 48019 711000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 390)) nil (25991 6036 48018 911000) 0 nil])
([nil nil ((390 . 391)) nil (25991 6036 48018 11000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 399)) nil (25991 6036 48017 211000) 0 nil])
([nil nil ((399 . 400)) nil (25991 6036 48016 611000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 460)) nil (25991 6036 48015 811000) 0 nil])
([nil nil ((460 . 461)) nil (25991 6036 48014 911000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 460) (undo-tree-id145 . -1) (461 . 462)) nil (25991 6036 48013 911000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 532)) nil (25991 6036 48011 711000) 0 nil])
([nil nil ((532 . 533)) nil (25991 6036 48010 911000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 533)) nil (25991 6036 48009 911000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 533)) nil (25991 6036 48009 11000) 0 nil])
([nil nil ((#(" " 0 1 (face (org-indent) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 553) (#(" " 0 1 (face (org-indent) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 553) (#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 553)) nil (25991 6036 48007 811000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 620)) nil (25991 6036 48006 411000) 0 nil])
([nil nil ((620 . 621)) nil (25991 6036 48005 511000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 621) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 621) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 621) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 621)) nil (25991 6036 48004 311000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 688) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 688) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 688) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 688) (#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 688)) nil (25991 6036 48002 811000) 0 nil])
([nil nil ((688 . 689)) nil (25991 6036 48001 511000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 748)) nil (25991 6036 48000 811000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 817) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 817) (#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 817)) nil (25991 6036 47999 911000) 0 nil])
([nil nil ((817 . 818)) nil (25991 6036 47998 811000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 871)) nil (25991 6036 47998 11000) 0 nil])
([nil nil ((553 . 555) 555) nil (25991 6036 47996 711000) 0 nil])
([nil nil ((#("-" 0 1 (face (org-list-dt) composition (1 1 [8226]) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -555) (undo-tree-id143 . -1) (undo-tree-id144 . -1) 556) nil (25991 6036 47995 511000) 0 nil])
([nil nil ((555 . 556)) nil (25991 6036 47993 211000) 0 nil])
([nil nil ((#("+" 0 1 (face (org-list-dt) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -555) (undo-tree-id142 . -1) 556) nil (25991 6036 47992 111000) 0 nil])
([nil nil ((555 . 556)) nil (25991 6036 47990 211000) 0 nil])
([nil nil ((#("-" 0 1 (face (org-list-dt) composition (1 1 [8226]) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -555) (undo-tree-id141 . -1) 556) nil (25991 6036 47989 311000) 0 nil])
([nil nil ((555 . 556)) nil (25991 6036 47987 611000) 0 nil])
([nil nil ((#("-" 0 1 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) face (org-list-dt) composition (1 1 [8226]) fontified t)) . -876) (undo-tree-id140 . -1) 877) nil (25991 6036 47986 611000) 0 nil])
([nil nil ((876 . 877)) nil (25991 6036 47984 911000) 0 nil])
([nil nil ((803 . 811)) nil (25991 6036 47983 811000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 949) (#(" " 0 1 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 949) (#(" " 0 1 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 949) (#("
" 0 1 (wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 949)) nil (25991 6036 47982 711000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -552) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#(" " 0 1 (wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -553) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -554) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("+" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -555) (undo-tree-id138 . -1) (#(" " 0 1 (face (org-indent) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -556) (undo-tree-id139 . -1) 557) nil (25991 6036 47980 411000) 0 nil])
([nil nil ((552 . 553)) nil (25991 6036 47971 11000) 0 nil])
([nil nil ((#("W" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 878) (#(" " 0 1 (wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 878) (#("+" 0 1 (face (org-list-dt) wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 878) (#(" " 0 1 (face (org-indent) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 878) (#(" " 0 1 (face (org-indent) wrap-prefix #("      " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 878)) nil (25991 6036 47969 611000) 0 nil])
([nil nil ((878 . 879)) nil (25991 6036 47968 111000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -877) (undo-tree-id130 . -1) 878) nil (25991 6036 47967 11000) 0 nil])
([nil nil ((877 . 878)) nil (25991 6036 47965 111000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -987) (undo-tree-id129 . -1) 988) nil (25991 6036 47964 11000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1058) (#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1058)) nil (25991 6036 47961 611000) 0 nil])
([nil nil ((#("-" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1086) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1086) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1086) (#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1086) (#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1086)) nil (25991 6036 47960 11000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1155) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1155) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1155) (#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1155)) nil (25991 6036 47958 311000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1178)) nil (25991 6036 47957 11000) 0 nil])
([nil nil ((#("-" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1244) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1244) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1244) (#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1244) (#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1244)) nil (25991 6036 47955 911000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1310) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1310) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1310) (#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1310)) nil (25991 6036 47954 211000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1379) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1379) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1379) (#(" " 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1379) (#("
" 0 1 (wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1379)) nil (25991 6036 47952 611000) 0 nil])
([nil nil ((1379 . 1380)) nil (25991 6036 47951 111000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1459)) nil (25991 6036 47950 211000) 0 nil])
([nil nil ((1459 . 1460)) nil (25991 6036 47949 411000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1582)) nil (25991 6036 47948 911000) 0 nil])
([nil nil ((1582 . 1583)) nil (25991 6036 47948 11000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1653)) nil (25991 6036 47947 211000) 0 nil])
([nil nil ((1653 . 1654)) nil (25991 6036 47946 311000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -1773) (undo-tree-id128 . -1) 1774) nil (25991 6036 47945 411000) 0 nil])
([nil nil ((1773 . 1774)) nil (25991 6036 47935 911000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1842)) nil (25991 6036 47935 211000) 0 nil])
([nil nil ((1842 . 1843)) nil (25991 6036 47934 711000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1910)) nil (25991 6036 47934 11000) 0 nil])
([nil nil ((1910 . 1911)) nil (25991 6036 47933 411000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 1981)) nil (25991 6036 47932 711000) 0 nil])
([nil nil ((1981 . 1982)) nil (25991 6036 47932 11000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2052)) nil (25991 6036 47931 111000) 0 nil])
([nil nil ((2052 . 2053)) nil (25991 6036 47930 211000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2123)) nil (25991 6036 47929 311000) 0 nil])
([nil nil ((2123 . 2124)) nil (25991 6036 47928 411000) 0 nil])
([nil nil ((#("** " 0 1 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (face org-level-2 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 2169) (2172 . 2174) 2186) nil (25991 6036 47927 611000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2258)) nil (25991 6036 47926 511000) 0 nil])
([nil nil ((2258 . 2259)) nil (25991 6036 47926 11000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2319)) nil (25991 6036 47925 311000) 0 nil])
([nil nil ((2319 . 2320)) nil (25991 6036 47924 611000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2331)) nil (25991 6036 47923 711000) 0 nil])
([nil nil ((2331 . 2332)) nil (25991 6036 47923 11000) 0 nil])
([nil nil ((#("** " 0 1 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (face org-level-2 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 2599) (2602 . 2604) 2619) nil (25991 6036 47922 11000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . 2689)) nil (25991 6036 47920 611000) 0 nil])
([nil nil ((2689 . 2690)) nil (25991 6036 47919 511000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3044)) nil (25991 6036 47918 611000) 0 nil])
([nil nil ((3044 . 3045)) nil (25991 6036 47917 711000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3112)) nil (25991 6036 47916 911000) 0 nil])
([nil nil ((3112 . 3113)) nil (25991 6036 47915 911000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3115)) nil (25991 6036 47914 911000) 0 nil])
([nil nil ((3115 . 3116)) nil (25991 6036 47914 11000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3184)) nil (25991 6036 47913 111000) 0 nil])
([nil nil ((3184 . 3185)) nil (25991 6036 47912 211000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 3634)) nil (25991 6036 47910 911000) 0 nil])
([nil nil ((3634 . 3635)) nil (25991 6036 47910 11000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4566)) nil (25991 6036 47909 11000) 0 nil])
([nil nil ((4566 . 4567)) nil (25991 6036 47908 111000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4628)) nil (25991 6036 47907 211000) 0 nil])
([nil nil ((4628 . 4629)) nil (25991 6036 47906 211000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4635)) nil (25991 6036 47905 111000) 0 nil])
([nil nil ((4635 . 4636)) nil (25991 6036 47904 311000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4705)) nil (25991 6036 47903 111000) 0 nil])
([nil nil ((4705 . 4706)) nil (25991 6036 47902 311000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4771)) nil (25991 6036 47901 411000) 0 nil])
([nil nil ((4771 . 4772)) nil (25991 6036 47900 611000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4776)) nil (25991 6036 47899 711000) 0 nil])
([nil nil ((4776 . 4777)) nil (25991 6036 47898 911000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 4848)) nil (25991 6036 47898 111000) 0 nil])
([nil nil ((4848 . 4849)) nil (25991 6036 47897 411000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5540)) nil (25991 6036 47896 511000) 0 nil])
([nil nil ((5540 . 5541)) nil (25991 6036 47895 711000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5613)) nil (25991 6036 47895 11000) 0 nil])
([nil nil ((5613 . 5614)) nil (25991 6036 47894 311000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5686)) nil (25991 6036 47893 611000) 0 nil])
([nil nil ((5686 . 5687)) nil (25991 6036 47892 711000) 0 nil])
([nil nil ((#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5742)) nil (25991 6036 47891 911000) 0 nil])
([nil nil ((5742 . 5743)) nil (25991 6036 47891 11000) 0 nil])
([nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5757)) nil (25991 6036 47889 911000) 0 nil])
([nil nil ((5757 . 5758)) nil (25991 6036 812766 414000) 0 nil])
([nil nil ((#("j" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2397) (undo-tree-id272 . -1) (#("j" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2398) (undo-tree-id273 . -1) (#("j" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2399) (undo-tree-id274 . -1) 2400 (2397 . 2400) (2589 . 2591) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2375) (2590 . 2591) (2374 . 2377) (2942 . 2944) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("    " 0 2 (face org-indent) 2 4 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified nil)) . 2741) (2943 . 2944) (2740 . 2743) (3246 . 3248) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 3531) 3246 (3245 . 3246) (3529 . 3532) (3695 . 3697) (#("  " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 4455) 3695 (3694 . 3695) (4453 . 4456) (5449 . 5452) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5449) (undo-tree-id275 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("     " 0 4 (face org-indent) 4 5 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5450) (undo-tree-id276 . -1) (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5451) (undo-tree-id277 . -1) (#("
" 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5452) (undo-tree-id278 . -1) 5453 (5450 . 5452) (#("          " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 8 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 8 10 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 4921) (#("         " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 7 9 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 4985) (#(" " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 4996) (#("         " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 7 9 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5038) (#(" " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5049) (#("        " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 7 8 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5091) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5101) (#("        " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 8 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5145) (#("  " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5155) (#("       " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5198) (#("   " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 3 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5207) (#("       " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 7 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5252) (#("   " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 3 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5261) (#("      " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5306) (#("    " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 4 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5314) (#("      " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5361) (#("    " 0 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5369) (#("     " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5394) (#("     " 0 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5405) (#("     " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5440) (#("     " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 3 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 3 5 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5451) (#("    " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 2 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5486) (#("      " 0 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5496) (#("    " 0 1 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 1 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5532) (#("      " 0 5 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 5 6 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                    " 0 4 (face org-indent) 4 20 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5542) (#("   " 0 3 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5576) (#("       " 0 7 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5581) (#("            " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 2 4 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 4 6 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 6 8 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 8 10 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil) 10 12 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5591) 4918 (5589 . 5590) (4929 . 4931) (4983 . 4984) (4993 . 4994) (5034 . 5035) (5044 . 5045) (5085 . 5087) (5137 . 5139) (5198 . 5200) (5240 . 5241) (5250 . 5251) (5292 . 5293) (5302 . 5303) (5345 . 5347) (5376 . 5378) (5434 . 5436) (5464 . 5465) (5478 . 5479) (5508 . 5509) (5522 . 5523) (5550 . 5562) (5552 . 5554) 4918 (5549 . 5550) (4927 . 4929) (4981 . 4982) (4989 . 4990) (5030 . 5031) (5038 . 5039) (5079 . 5081) (5129 . 5131) (5186 . 5188) (5228 . 5229) (5236 . 5237) (5278 . 5279) (5286 . 5287) (5329 . 5331) (5358 . 5360) (5412 . 5414) (5442 . 5443) (5454 . 5455) (5484 . 5498) (5513 . 5515) 4918 (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("                " 0 4 (face org-indent) 4 16 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5483) (undo-tree-id279 . -1) (5484 . 5485) (4925 . 4927) (4979 . 4980) (4985 . 4986) (5026 . 5027) (5032 . 5033) (5073 . 5074) (5079 . 5080) (5121 . 5122) (5127 . 5128) (5168 . 5170) (5216 . 5218) (5270 . 5272) (5313 . 5315) (5350 . 5352) (5380 . 5381) (5390 . 5391) (5420 . 5432) (5479 . 5481) 4918 (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("              " 0 4 (face org-indent) 4 14 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5419) (undo-tree-id280 . -1) (5420 . 5421) (4923 . 4925) (4977 . 4979) (5026 . 5028) (5067 . 5069) (5117 . 5119) (5158 . 5160) (5208 . 5210) (5250 . 5252) (5301 . 5303) (5322 . 5324) (5360 . 5370) (5449 . 5451) 4918 (#(" " 0 1 (face (org-block) font-lock-multiline t src-block t font-lock-fontified t wrap-prefix #("            " 0 4 (face org-indent) 4 12 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 5359) (undo-tree-id281 . -1) (5360 . 5361) (4921 . 4923) (4975 . 4977) (5020 . 5022) (5061 . 5062) (5063 . 5064) (5105 . 5106) (5107 . 5108) (5148 . 5149) (5150 . 5151) (5192 . 5194) (5238 . 5240) (5281 . 5283) (5304 . 5312) (5423 . 5425) 4918 (5303 . 5304) (5422 . 5424) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 4918) (5423 . 5424) (4917 . 4920) (7082 . 7084) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 6147) (7083 . 7084) (6146 . 6149) (7355 . 7357) (#("  " 0 2 (src-block t face (org-block) font-lock-multiline t font-lock-fontified t wrap-prefix #("      " 0 4 (face org-indent) 4 6 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 7307) (7356 . 7357) (7306 . 7309) (6049 . 6055) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6049) (#("w" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6049) (undo-tree-id282 . -1) (#("i" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6050) (undo-tree-id283 . -1) (#("l" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -6051) (undo-tree-id284 . -1) 6052 (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7251) (7250 . 7251) (7179 . 7180) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 7179) (6106 . 6107) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6106) (6036 . 6037) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 6036) (5965 . 5966) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5965) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5895) (#("s" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5895) (undo-tree-id285 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -5896) (undo-tree-id286 . -1) 5897 (5829 . 5830) (#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5829)) nil (25991 6190 228310 849000) 0 nil] [nil nil ((#("
" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5829)) ((5829 . 5830)) (25991 6036 49052 811000) 0 nil])
([nil nil ((#("** " 0 1 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (face org-level-2 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 2960) (2963 . 2965) 2961) nil (25991 6190 228258 349000) 0 nil])
([nil nil ((5829 . 5830)) ((#(" " 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 5829)) (25991 6036 47882 111000) 0 nil])
([nil nil ((#("** " 0 1 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (face org-level-2 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 3552) (3555 . 3557) 3552) nil (25991 6190 228257 149000) 0 nil])
nil
([nil nil ((#("** " 0 1 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (face org-level-2 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 4479) (4482 . 4484) 4479) nil (25991 6190 228255 849000) 0 nil])
([nil nil ((#("** " 0 1 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (face org-level-2 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 5477) (5480 . 5482) 5477) nil (25991 6190 228253 849000) 0 nil])
([nil nil ((#("** " 0 1 (keymap (keymap) face org-hide wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 1 2 (face org-level-2 keymap (keymap) composition (2 1 [9675]) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t) 2 3 (face org-level-2 keymap (keymap) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) line-prefix #("*" 0 1 (face org-indent)) fontified t)) . 7140) (7143 . 7145) 7140) nil (25991 6190 228247 349000) 0 nil])
([nil nil ((#("BEGIN_SRC" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -7337) (7346 . 7355) (#("BEGIN_SRC" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -6174) (6183 . 6192) (#("BEGIN_SRC" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4914) (4923 . 4932) (#("BEGIN_SRC" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3688) (3697 . 3706) (#("BEGIN_SRC" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3236) (3245 . 3254) (#("BEGIN_SRC" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2728) (2737 . 2746) (#("BEGIN_SRC" 0 9 (face org-block-begin-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2358) (t 25991 6190 222552 649000) (2367 . 2376) (t 25991 6190 222552 649000)) nil (25991 6290 618957 2000) 0 nil])
([nil current ((#("END_SRC" 0 7 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -7407) (7414 . 7421) (#("END_SRC" 0 7 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -7131) (7138 . 7145) (#("END_SRC" 0 7 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -5468) (5475 . 5482) (#("END_SRC" 0 7 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -4470) (4477 . 4484) (#("END_SRC" 0 7 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -3543) (3550 . 3557) (#("END_SRC" 0 7 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2951) (2958 . 2965) (#("END_SRC" 0 7 (face org-block-end-line font-lock-multiline t font-lock-fontified t wrap-prefix #("  " 0 2 (face org-indent)) line-prefix #("  " 0 2 (face org-indent)) fontified t)) . -2594) (2601 . 2608)) nil (25991 6290 618947 902000) 0 nil])
nil
